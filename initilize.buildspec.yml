---
version: 0.2
env:
  shell: bash
  variables:
    RDS_CA_CERT_URL: https://truststore.pki.rds.amazonaws.com/global/global-bundle.pem
    MYSQL_USER_TO_CREATE: iam
phases:
  install:
    on-failure: ABORT
    commands:
      - set -euo pipefail
      - echo 'Install phase is started.'
      - dnf -yq update
      - dnf -yq install aws-cli jq mariadb105
    finally:
      - aws --version
      - jq --version
      - mariadb --version
      - echo 'Install phase is completed.'
  pre_build:
    on-failure: ABORT
    commands:
      - set -euo pipefail
      - echo 'Pre-build phase is started.'
      - curl -sSL -o "/etc/pki/ca-trust/source/anchors/${RDS_CA_CERT_URL##*/}" "${RDS_CA_CERT_URL}"
      - update-ca-trust
    finally:
      - echo 'Pre-build phase is completed.'
  build:
    on-failure: ABORT
    commands:
      - set -euo pipefail
      - echo 'Build phase is started.'
      - secret_json="$(
          aws secretsmanager get-secret-value
          --secret-id="${RDS_CLUSTER_SECRETS_MANAGER_SECRET_ARN}"
          --query='SecretString'
          --output=text
        )"
      - username="$(echo "${secret_json}" | jq -r '.username')"
      - password="$(echo "${secret_json}" | jq -r '.password')"
      - mariadb
        --verbose
        --host="${RDS_CLUSTER_ENDPOINT}"
        --port="${RDS_CLUSTER_PORT}"
        --user="${username}"
        --password="${password}"
        --execute="CREATE DATABASE IF NOT EXISTS ${RDS_CLUSTER_DATABASE_NAME};
                   SHOW DATABASES;"
      - mariadb
        --verbose
        --host="${RDS_CLUSTER_ENDPOINT}"
        --port="${RDS_CLUSTER_PORT}"
        --user="${username}"
        --password="${password}"
        --execute="CREATE USER IF NOT EXISTS '${MYSQL_USER_TO_CREATE}' IDENTIFIED WITH AWSAuthenticationPlugin AS 'RDS';
                   GRANT ALL PRIVILEGES ON ${RDS_CLUSTER_DATABASE_NAME}.* TO '${MYSQL_USER_TO_CREATE}';
                   FLUSH PRIVILEGES;
                   SHOW GRANTS FOR '${MYSQL_USER_TO_CREATE}';"
    finally:
      - echo 'Build phase is completed.'
  post_build:
    on-failure: ABORT
    commands:
      - set -euo pipefail
      - echo 'Post-build phase is started.'
      - token="$(
          aws rds generate-db-auth-token
          --hostname="${RDS_CLUSTER_ENDPOINT}"
          --port="${RDS_CLUSTER_PORT}"
          --username="${MYSQL_USER_TO_CREATE}"
        )"
      - mariadb
        --verbose
        --host="${RDS_CLUSTER_INSTANCE_ENDPOINT}"
        --port="${RDS_CLUSTER_PORT}"
        --user="${MYSQL_USER_TO_CREATE}"
        --password="${token}"
        --ssl
        --database="${RDS_CLUSTER_DATABASE_NAME}"
        --execute='SELECT USER(), CURRENT_USER(), VERSION();'
    finally:
      - echo 'Post-build phase is completed.'
